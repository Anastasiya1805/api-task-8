{
	"info": {
		"_postman_id": "b543fa46-0dd9-4381-b50c-81327a86a4c8",
		"name": "Create and change task iterations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "18927542-b543fa46-0dd9-4381-b50c-81327a86a4c8"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f2e61aff-e8c2-482a-b3b2-8d58c859e8cb",
						"exec": [
							"let jsonData = pm.response.json();",
							"pm.environment.set('token', jsonData.id_token)",
							"",
							"let schema = ",
							"{",
							"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
							"    \"$ref\": \"#/definitions/TheIDTokenSchema\",",
							"    \"definitions\": {",
							"        \"TheIDTokenSchema\": {",
							"            \"type\": \"object\",",
							"            \"additionalProperties\": false,",
							"            \"properties\": {",
							"                \"id_token\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"id_token\"",
							"            ],",
							"            \"title\": \"TheIDTokenSchema\"",
							"        }",
							"    }",
							"}",
							"",
							"pm.test('Проверка соответствия JSON-схеме', function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "8b23318b-232b-474a-a860-e91fd4ef37d5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "Accept-Language",
						"value": "en-US,en;q=0.9,it-IT;q=0.8,it;q=0.7,fr-FR;q=0.6,fr;q=0.5,de-DE;q=0.4,de;q=0.3,ru;q=0.2"
					},
					{
						"key": "Connection",
						"value": "keep-alive"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Origin",
						"value": "https://sqlverifier-50d286d70656.herokuapp.com"
					},
					{
						"key": "Referer",
						"value": "https://sqlverifier-50d286d70656.herokuapp.com/login"
					},
					{
						"key": "Sec-Fetch-Dest",
						"value": "empty"
					},
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-origin"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					},
					{
						"key": "x-mock-match-request-headers",
						"value": "400",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"{{adminLogin}}\",\"password\":\"{{adminPassword}}\",\"rememberMe\":false}"
				},
				"url": {
					"raw": "{{baseUrl}}/authenticate",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "get tasks list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f5e6df8e-4284-4e83-9425-52dd23300db4",
						"exec": [
							"let currentAmountOfTasks = pm.response.json().length;",
							"console.log(pm.response.json().length)",
							"",
							"pm.environment.set('currentAmountOfTasks', currentAmountOfTasks)",
							"pm.environment.set(\"ids\", [])",
							"",
							"if(currentAmountOfTasks < pm.environment.get('targetNumberOfTasks')) {",
							"    pm.execution.setNextRequest('create a task')",
							"} else {",
							"    pm.environment.set(\"lastID\",pm.response.json()[currentAmountOfTasks - 1].id)",
							"    let ids = [];",
							"    ids.push(pm.environment.get(\"lastID\"))",
							"    pm.environment.set(\"ids\", ids)",
							"    pm.execution.setNextRequest('change task text')",
							"    }",
							"",
							"let schema =",
							"    {",
							"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
							"    \"type\": \"array\",",
							"    \"items\": {",
							"        \"$ref\": \"#/definitions/TheSchemaElement\"",
							"    },",
							"    \"definitions\": {",
							"        \"TheSchemaElement\": {",
							"            \"type\": \"object\",",
							"            \"additionalProperties\": false,",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"text\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"answer\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"answer\",",
							"                \"id\",",
							"                \"text\",",
							"                \"title\"",
							"            ],",
							"            \"title\": \"TheSchemaElement\"",
							"        }",
							"    }",
							"}",
							"",
							"pm.test('Check JSON schema compliance', function () {",
							"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1f34415a-048c-4dc2-8463-dda9a2f24c38",
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "7dca368c-a03c-45f1-b794-8c9eb68c285d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTcwMDY1MTA3OCwiYXV0aCI6IlJPTEVfQURNSU4iLCJpYXQiOjE3MDA1NjQ2Nzh9.vIN53s5RHi0_NuFKchJ3Wxi3ajjjtTt_0X_qJSYtFti7Xw4Veqy9jEpRervasFgwCyrZGihIehGmwaUXLYIaFg"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/tasks?page=0&size=1000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"tasks"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create a task",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "786e1681-2194-465f-8798-828353e3da46",
						"exec": [
							"let jsonData = pm.response.json();",
							"",
							"const ids = pm.environment.get(\"ids\")",
							"console.log(\"jsonData.id is \" + jsonData.id)",
							"ids.push(jsonData.id)",
							"console.log(ids)",
							"pm.environment.set(\"ids\", ids)",
							"",
							"pm.environment.set('lastID', jsonData.id)",
							"",
							"let currentAmountOfTasks = pm.environment.get(\"currentAmountOfTasks\");",
							"currentAmountOfTasks++;",
							"pm.environment.set('currentAmountOfTasks', currentAmountOfTasks)",
							"",
							"if(currentAmountOfTasks < pm.environment.get('targetNumberOfTasks')) {",
							"    pm.execution.setNextRequest(\"create a task\")",
							"} else {",
							"    pm.execution.setNextRequest('change task text')",
							"}",
							"",
							"let schema = ",
							"{",
							"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
							"    \"$ref\": \"#/definitions/TheSchema\",",
							"    \"definitions\": {",
							"        \"TheSchema\": {",
							"            \"type\": \"object\",",
							"            \"additionalProperties\": false,",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"text\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"answer\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"answer\",",
							"                \"id\",",
							"                \"text\",",
							"                \"title\"",
							"            ],",
							"            \"title\": \"TheSchema\"",
							"        }",
							"    }",
							"}",
							"",
							"pm.test(\"Check JSON scheme\", function(){",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"})",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "b7148dd6-857e-4654-a4b8-7a60bc0826af",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTcwMDY1MTA3OCwiYXV0aCI6IlJPTEVfQURNSU4iLCJpYXQiOjE3MDA1NjQ2Nzh9.vIN53s5RHi0_NuFKchJ3Wxi3ajjjtTt_0X_qJSYtFti7Xw4Veqy9jEpRervasFgwCyrZGihIehGmwaUXLYIaFg"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\": \"some text\",\n  \"answer\": \"string\",\n  \"title\": \"string\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/tasks",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "change task text",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9da28a1d-a589-4cdc-9216-7da7db6697de",
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1f9220e0-7707-422e-8919-a316f132347d",
						"exec": [
							"let schema = \r",
							"{\r",
							"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
							"    \"$ref\": \"#/definitions/TheSchema\",\r",
							"    \"definitions\": {\r",
							"        \"TheSchema\": {\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false,\r",
							"            \"properties\": {\r",
							"                \"id\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"text\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"answer\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"title\": {\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"answer\",\r",
							"                \"id\",\r",
							"                \"text\",\r",
							"                \"title\"\r",
							"            ],\r",
							"            \"title\": \"TheSchema\"\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"pm.test(\"Check JSON scheme\", function(){\r",
							"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "9ad2a14f-ff8a-489b-b8f4-44d41f43e3d7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTcwMDY1MTA3OCwiYXV0aCI6IlJPTEVfQURNSU4iLCJpYXQiOjE3MDA1NjQ2Nzh9.vIN53s5RHi0_NuFKchJ3Wxi3ajjjtTt_0X_qJSYtFti7Xw4Veqy9jEpRervasFgwCyrZGihIehGmwaUXLYIaFg"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": \"{{lastID}}\",\n  \"text\": \"some new new text\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/tasks/{{lastID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"tasks",
						"{{lastID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get task data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ced7c07-19f3-4590-813c-172b2750e1be",
						"exec": [
							"let arr = pm.environment.get('ids')",
							"",
							"arr.forEach((id)=>{",
							"    pm.sendRequest(",
							"        {url: `https://sqlverifier-live-6e21ca0ed768.herokuapp.com/api/tasks/${id}`,",
							"        method: 'DELETE',",
							"        header:",
							"        {'Authorization': 'Bearer ' + pm.environment.get('token'),",
							"        'accept': '*/*'}",
							"        }",
							"        , function (err, response) {",
							"        console.log(response);",
							"    });",
							"})",
							"",
							"let schema = ",
							"{",
							"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
							"    \"$ref\": \"#/definitions/TheSchema\",",
							"    \"definitions\": {",
							"        \"TheSchema\": {",
							"            \"type\": \"object\",",
							"            \"additionalProperties\": false,",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"integer\"",
							"                },",
							"                \"text\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"answer\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"title\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"required\": [",
							"                \"answer\",",
							"                \"id\",",
							"                \"text\",",
							"                \"title\"",
							"            ],",
							"            \"title\": \"TheSchema\"",
							"        }",
							"    }",
							"}",
							"",
							"pm.test(\"Check JSON scheme\", function(){",
							"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
							"})",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "2fc323ff-5180-41e4-b46d-8b05c0bbe112",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTcwMDY1MTA3OCwiYXV0aCI6IlJPTEVfQURNSU4iLCJpYXQiOjE3MDA1NjQ2Nzh9.vIN53s5RHi0_NuFKchJ3Wxi3ajjjtTt_0X_qJSYtFti7Xw4Veqy9jEpRervasFgwCyrZGihIehGmwaUXLYIaFg"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/tasks/{{lastID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"tasks",
						"{{lastID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f5d15dd8-e1b8-41c4-87f2-064e5615277f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "31e8b674-4949-49dd-8da1-05877c7c1636",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c41cff46-3487-437e-8555-e562f31398df",
			"key": "jsonData",
			"value": "pm.response.json()",
			"type": "string"
		}
	]
}